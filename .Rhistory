golem::add_shinyappsio_file()
usethis::use_git()
golem::fill_desc(
pkg_name = "deploytest", # The name of the golem package containing the app (typically lowercase, no underscore or periods)
pkg_title = "PKG_TITLE", # What the Package Does (One Line, Title Case, No Period)
pkg_description = "PKG_DESC.", # What the package does (one paragraph).
authors = person(
given = "AUTHOR_FIRST", # Your First Name
family = "AUTHOR_LAST", # Your Last Name
email = "AUTHOR@MAIL.COM", # Your email
role = c("aut", "cre") # Your role (here author/creator)
),
repo_url = NULL, # The URL of the GitHub repo (optional),
pkg_version = "0.0.0.9000", # The version of the package containing the app
set_options = TRUE # Set the global golem options
)
## Install the required dev dependencies ----
golem::install_dev_deps()
golem::install_dev_deps()
usethis::use_mit_license("Golem User") # You can set another license here
golem::use_readme_rmd(open = FALSE)
devtools::build_readme()
usethis::use_git_remote(
name = "origin",
url = "https://github.com/<OWNER>/<REPO>.git"
)
gitignore
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Comment this if you don't want the app to be served on a random port
options(shiny.port = httpuv::randomPort())
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Comment this if you don't want the app to be served on a random port
options(shiny.port = httpuv::randomPort())
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Comment this if you don't want the app to be served on a random port
options(shiny.port = httpuv::randomPort())
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
